<?xml version="1.0" encoding="UTF-8"?>
<!-- OCamlEditor XML Project -->
<project>
  <ocaml_home></ocaml_home>
  <ocamllib></ocamllib>
  <encoding>UTF-8</encoding>
  <name>ocamlfpdf</name>
  <author>Francesco Tovagliari</author>
  <description>
    <line>OCaml translation of the FPDF library (www.fpdf.org), with additions.</line>
  </description>
  <version>1.0.0</version>
  <autocomp enabled="true" delay="1." cflags=""/>
  <targets>
    <target name="fpdf library" default="false" id="0">
      <byt>true</byt>
      <opt>true</opt>
      <libs>xml-light</libs>
      <other_objects></other_objects>
      <files>PDFJavascript.ml PDFPack.ml PDFTable.ml barcode.ml PDFMarkup.ml PDFBookmark.ml</files>
      <package></package>
      <includes>+xml-light</includes>
      <thread>false</thread>
      <vmthread>false</vmthread>
      <pp></pp>
      <inline></inline>
      <cflags>-w y -g</cflags>
      <lflags>-g</lflags>
      <target_type>Library</target_type>
      <outname>fpdf</outname>
      <lib_install_path>fpdf</lib_install_path>
      <external_tasks>
        <task name="ocamldoc">
          <always_run_in_project>true</always_run_in_project>
          <always_run_in_script>true</always_run_in_script>
          <env replace="false"/>
          <dir></dir>
          <cmd>ocamldoc</cmd>
          <args>
            <arg enabled="true">-d</arg>
            <arg enabled="true">../doc</arg>
            <arg enabled="true">*.mli</arg>
            <arg enabled="true">-t</arg>
            <arg enabled="true">&quot;ocamlfpdf&quot;</arg>
            <arg enabled="true">-html</arg>
            <arg enabled="true">-I</arg>
            <arg enabled="true">+lablgtk2</arg>
          </args>
          <phase>After_compile</phase>
        </task>
      </external_tasks>
      <restrictions></restrictions>
      <dependencies></dependencies>
    </target>
    <target name="Test" default="false" id="6">
      <byt>false</byt>
      <opt>true</opt>
      <libs>unix str nums cryptokit xml-light</libs>
      <other_objects></other_objects>
      <files>test.ml</files>
      <package></package>
      <includes>+xml-light </includes>
      <thread>false</thread>
      <vmthread>false</vmthread>
      <pp></pp>
      <inline></inline>
      <cflags>-w y -g</cflags>
      <lflags></lflags>
      <target_type>Executable</target_type>
      <outname>test</outname>
      <lib_install_path></lib_install_path>
      <external_tasks>
        <task name="ocamldoc">
          <always_run_in_project>false</always_run_in_project>
          <always_run_in_script>true</always_run_in_script>
          <env replace="false"/>
          <dir></dir>
          <cmd>ocamldoc</cmd>
          <args>
            <arg enabled="true">-d</arg>
            <arg enabled="true">../doc</arg>
            <arg enabled="true">-html</arg>
            <arg enabled="true">*.mli</arg>
            <arg enabled="true">-t</arg>
            <arg enabled="true">&quot;ocamlfpdf&quot;</arg>
          </args>
          <phase>After_compile</phase>
        </task>
      </external_tasks>
      <restrictions></restrictions>
      <dependencies></dependencies>
    </target>
    <target name="Test Markup Editor" default="false" id="7">
      <byt>false</byt>
      <opt>true</opt>
      <libs>unix str nums cryptokit xml-light lablgtk gtkInit.o </libs>
      <other_objects></other_objects>
      <files>test_pdfmarkup_editor.ml</files>
      <package></package>
      <includes>+xml-light +lablgtk2</includes>
      <thread>false</thread>
      <vmthread>false</vmthread>
      <pp></pp>
      <inline></inline>
      <cflags>-w sy -g</cflags>
      <lflags>-g</lflags>
      <target_type>Executable</target_type>
      <outname>test_pdfmarkup_editor</outname>
      <lib_install_path></lib_install_path>
      <external_tasks/>
      <restrictions></restrictions>
      <dependencies></dependencies>
    </target>
    <target name="Markup Editor" default="false" id="8">
      <byt>true</byt>
      <opt>true</opt>
      <libs></libs>
      <other_objects></other_objects>
      <files>gtk_pdfmarkup_editor.ml</files>
      <package></package>
      <includes>+lablgtk2 +xml-light</includes>
      <thread>false</thread>
      <vmthread>false</vmthread>
      <pp></pp>
      <inline></inline>
      <cflags>-w sy -g</cflags>
      <lflags>-g</lflags>
      <target_type>Library</target_type>
      <outname>gtk_pdfmarkup_editor</outname>
      <lib_install_path>fpdf</lib_install_path>
      <external_tasks/>
      <restrictions></restrictions>
      <dependencies></dependencies>
    </target>
    <target name="fpdf library (bytecode)" default="true" id="9">
      <byt>true</byt>
      <opt>false</opt>
      <libs>xml-light</libs>
      <other_objects></other_objects>
      <files>PDFJavascript.ml PDFPack.ml PDFTable.ml barcode.ml PDFMarkup.ml PDFBookmark.ml</files>
      <package></package>
      <includes>+xml-light</includes>
      <thread>false</thread>
      <vmthread>false</vmthread>
      <pp></pp>
      <inline></inline>
      <cflags>-w y -g</cflags>
      <lflags>-g</lflags>
      <target_type>Library</target_type>
      <outname>fpdf</outname>
      <lib_install_path>fpdf</lib_install_path>
      <external_tasks/>
      <restrictions></restrictions>
      <dependencies></dependencies>
    </target>
  </targets>
  <executables>
    <executable name="Test" default="true" target_id="6" id="3">
      <build_task>&lt;COMPILE&gt;</build_task>
      <env replace="false">
        <var enabled="true">TEST=1</var>
        <var enabled="true">OCAMLRUNPARAM=b</var>
      </env>
      <args/>
    </executable>
    <executable name="Test Editor" default="false" target_id="7" id="5">
      <build_task>&lt;COMPILE&gt;</build_task>
      <env replace="false">
        <var enabled="true">OCAMLRUNPARAM=b</var>
      </env>
      <args/>
    </executable>
  </executables>
  <build_script filename="_build.ml">
    <targets>
      <target target_id="0" show="true"/>
      <target target_id="6" show="true"/>
      <target target_id="7" show="true"/>
      <target target_id="8" show="true"/>
      <target target_id="9" show="true"/>
    </targets>
    <args/>
    <commands/>
  </build_script>
</project>